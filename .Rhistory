nocur2<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_2") %>% filter(trial %in% c(0, 1, 2, 3, 4)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur2')
# boxplot(nocur2$pv)
# nocur2 <- nocur2[-c(15),] # outlying participant from training
nocurdf<- rbind(nocur1,nocur2)
nocurdf$task <- factor(nocurdf$task)
nocurdf$subject <- factor(nocurdf$subject)
ggplot(nocurdf, aes(task,pv)) +
+ geom_point()
AE_single_n <- nocur2$pv - nocur1$pv
t.test(AE_single_n, mu = 0)
obs_single_AE <- obssingle %>% filter(condition == c("nocur_1", "nocur_2"))
obssingle <- read.csv('DualObs_Data0305_SINGLESONLY.csv', header = TRUE)
obssingle <- tbl_df(obssingle)
setwd('data')
setwd('')
setwd
setwd()
setwd('/Users/mayala/Desktop/obstacle/analysis')
setwd('/Users/mayala/Desktop/obstacle/data')
obssingle <- read.csv('DualObs_Data0305_SINGLESONLY.csv', header = TRUE)
obssingle <- tbl_df(obssingle) # make to tibble
unique((obssingle))
nocur1<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_1") %>% filter(trial %in% c(25,26,27,28,29)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur1')
# boxplot(nocur1$pv)
# nocur1 <- nocur1[-c(2,3),] # outliers
nocur2<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_2") %>% filter(trial %in% c(0, 1, 2, 3, 4)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur2')
# boxplot(nocur2$pv)
# nocur2 <- nocur2[-c(15),] # outlying participant from training
nocurdf<- rbind(nocur1,nocur2)
nocurdf$task <- factor(nocurdf$task)
nocurdf$subject <- factor(nocurdf$subject)
ggplot(nocurdf, aes(task,pv)) +
+ geom_point()
AE_single_n <- nocur2$pv - nocur1$pv
t.test(AE_single_n, mu = 0)
# single CW t = 1.9947, df = 12, p-value = 0.0693
obs_single_AE <- obssingle %>% filter(condition == c("nocur_1", "nocur_2"))
nocur1<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_1") %>% filter(trial %in% c(25,26,27,28,29)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur1')
# boxplot(nocur1$pv)
# nocur1 <- nocur1[-c(2,3),] # outliers
nocur2<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_2") %>% filter(trial %in% c(0, 1, 2, 3, 4)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur2')
# boxplot(nocur2$pv)
# nocur2 <- nocur2[-c(15),] # outlying participant from training
nocurdf<- rbind(nocur1,nocur2)
nocurdf$task <- factor(nocurdf$task)
nocurdf$subject <- factor(nocurdf$subject)
ggplot(nocurdf, aes(task,pv)) +
+ geom_point()
AE_single_n <- nocur2$pv - nocur1$pv
boxplot(AE_single_n)
head(obs_single_AE)
AE1 <- AE_signl
AE1 <- AE_single_n
rot <- 2
nocur1<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_1") %>% filter(trial %in% c(25,26,27,28,29)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur1')
# boxplot(nocur1$pv)
# nocur1 <- nocur1[-c(2,3),] # outliers
nocur2<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_2") %>% filter(trial %in% c(0, 1, 2, 3, 4)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur2')
# boxplot(nocur2$pv)
# nocur2 <- nocur2[-c(15),] # outlying participant from training
nocurdf<- rbind(nocur1,nocur2)
nocurdf$task <- factor(nocurdf$task)
nocurdf$subject <- factor(nocurdf$subject)
ggplot(nocurdf, aes(task,pv)) +
+ geom_point()
AE_single_n <- nocur2$pv - nocur1$pv
t.test(AE_single_n, mu = 0)
AE <- rbind(AE1, AE_single_n)
AE
View(AE)
AE <- c(AE1, AE_single_n)
AE <- abs(AE)
t.test(AE, mu=0)
?t.test
t.test(AE_single_n, y=AE1)
t.test(abs(AE_single_n), y=abs(AE1))
obsdual <- read.csv('DualObs_Data0305_DUALONLY.csv', header = TRUE)
obsdual <- tbl_df(obsdual)
obs_dual_train <- obsdual %>% filter(condition == 'train_dual') # looking only at trainin
head(obs_dual_train)
sort(unique(obs_dual_train$targetang))
rot <- 1
target <- 120
taskmeans<- obs_dual_train %>% filter(rotationval == rot | targetang == target) %>% group_by(subject) %>% group_by(trial) %>%
summarise(Mean_RMSExy = mean(RMSExy, na.rm=TRUE), SD_RMSExy = sd(RMSExy, na.rm=TRUE),
SEM_RMSExy = SD_RMSExy/sqrt(length(unique(subject))))
View(taskmeans)
taskmeans<- obs_dual_train %>% filter(rotationval == 2 | targetang == 120) %>% group_by(subject) %>% group_by(trial) %>%
summarise(Mean_RMSExy = mean(RMSExy, na.rm=TRUE), SD_RMSExy = sd(RMSExy, na.rm=TRUE),
SEM_RMSExy = SD_RMSExy/sqrt(length(unique(subject))))
taskplot <- ggplot(data=taskmeans, aes(x=trial, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5) +
ggtitle(dfname)
print(taskplot)
taskplot <- ggplot(data=taskmeans, aes(x=trial, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5)
print(taskplot)
taskplot <- ggplot(data=taskmeans, aes(x=trial, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5) +
geom_smooth(method="lm", aes(color="Exp Model"), formula= (Mean_RMSExy ~ exp(trial)), se=FALSE, linetype = 1)
print(taskplot)
taskmeans<- obs_dual_train %>% filter(rotationval == rot | targetang == target) %>% group_by(subject) %>% group_by(trial) %>%
summarise(Mean_RMSExy = mean(RMSExy, na.rm=TRUE), SD_RMSExy = sd(RMSExy, na.rm=TRUE),
SEM_RMSExy = SD_RMSExy/sqrt(length(unique(subject))))
taskplot <- ggplot(data=taskmeans, aes(x=trial, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5) +
geom_smooth(method="lm", formula= (Mean_RMSExy ~ exp(trial)), se=FALSE, linetype = 1)
print(taskplot)
taskmeans<- obs_dual_train %>% filter(rotationval == rot | targetang == target) %>% group_by(subject) %>% group_by(trial) %>%
summarise(Mean_RMSExy = mean(RMSExy, na.rm=TRUE), SD_RMSExy = sd(RMSExy, na.rm=TRUE),
SEM_RMSExy = SD_RMSExy/sqrt(length(unique(subject))))
taskplot <- ggplot(data=taskmeans, aes(x=trial, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5) +
geom_smooth(method="lm", formula= (Mean_RMSExy ~ exp(trial)), se=FALSE, linetype = 1)
print(taskplot)
setwd('/Users/mayala/Desktop/housing')
train <- read.csv('train.csv', header = TRUE)
library(ggplot2)
library(dplyr)
library(car)
train<- tbl_df(train)
head(train)
View(train)
mod1<-lm(SalePrice ~ LotArea, data=train)
summary(mod1)
# separate groups
for (group in sort(unique(obssingle$rotgroup))) {
dfname<- sprintf('rotgroup%d_train_means', group)
print(dfname)
obs_temp <- obssingle %>% filter(rotgroup == group) # looking only at training
#obs_single_ccw <- obssingle %>% filter(condition == 'train_CCW')
# get means
taskmeans<- obs_temp %>% group_by(subject) %>% group_by(trial) %>%
summarise(Mean_RMSExy = mean(RMSExy, na.rm=TRUE), SD_RMSExy = sd(RMSExy, na.rm=TRUE),
SEM_RMSExy = SD_RMSExy/sqrt(length(unique(subject))))
# get adaptation plot
taskplot <- ggplot(data=taskmeans, aes(x=trial, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5) +
ggtitle(dfname)
print(taskplot)
# some basic statistics (dv -- RMSE)
block1<- obs_temp %>% filter(trial %in% c(0)) %>% group_by(subject) %>% summarise(RMSE = mean(RMSExy, na.rm=TRUE), block = mean(block5), rot = mean(rotationval))
blocklast<- obs_temp %>% filter(trial %in% c(175,176,177,178,179)) %>% group_by(subject) %>% summarise(RMSE = mean(RMSExy, na.rm=TRUE), block = ceiling(mean(block5)), rot = mean(rotationval))
# boxplot(blocklast$RMSE) # outlier
adaptdf<- rbind(block1,blocklast)
# adaptdf <- adaptdf[-c(20),]
adaptdf$block <- factor(adaptdf$block)
adaptdf$subject <- factor(adaptdf$subject)
RM_pv <- aov(RMSE ~ block + Error(subject/block), data=adaptdf)
print(summary(RM_pv))
## CCW - (F(1,9) = 20.81, p=0.00136)
## CW - (F(1,8) = 17.57, p=0.00303)
}
####################################################################
########################## single controls #########################
# load
obssingle <- read.csv('DualObs_Data0305_SINGLESONLY.csv', header = TRUE)
###### obstacle analysis script ######
library(ggplot2)
library(dplyr)
####################################################################
########################## single controls #########################
# load
obssingle <- read.csv('DualObs_Data0305_SINGLESONLY.csv', header = TRUE)
####################################################################
########################## single controls #########################
# load
obssingle <- read.csv('data/DualObs_Data0305_SINGLESONLY.csv', header = TRUE)
obssingle <- tbl_df(obssingle) # make to tibble
obssingle <- obssingle %>% filter(condition == c('train_CW', 'train_CCW'))
# separate groups
for (group in sort(unique(obssingle$rotgroup))) {
dfname<- sprintf('rotgroup%d_train_means', group)
print(dfname)
obs_temp <- obssingle %>% filter(rotgroup == group) # looking only at training
#obs_single_ccw <- obssingle %>% filter(condition == 'train_CCW')
# get means
taskmeans<- obs_temp %>% group_by(subject) %>% group_by(trial) %>%
summarise(Mean_RMSExy = mean(RMSExy, na.rm=TRUE), SD_RMSExy = sd(RMSExy, na.rm=TRUE),
SEM_RMSExy = SD_RMSExy/sqrt(length(unique(subject))))
# get adaptation plot
taskplot <- ggplot(data=taskmeans, aes(x=trial, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5) +
ggtitle(dfname)
print(taskplot)
# some basic statistics (dv -- RMSE)
block1<- obs_temp %>% filter(trial %in% c(0)) %>% group_by(subject) %>% summarise(RMSE = mean(RMSExy, na.rm=TRUE), block = mean(block5), rot = mean(rotationval))
blocklast<- obs_temp %>% filter(trial %in% c(175,176,177,178,179)) %>% group_by(subject) %>% summarise(RMSE = mean(RMSExy, na.rm=TRUE), block = ceiling(mean(block5)), rot = mean(rotationval))
# boxplot(blocklast$RMSE) # outlier
adaptdf<- rbind(block1,blocklast)
# adaptdf <- adaptdf[-c(20),]
adaptdf$block <- factor(adaptdf$block)
adaptdf$subject <- factor(adaptdf$subject)
RM_pv <- aov(RMSE ~ block + Error(subject/block), data=adaptdf)
print(summary(RM_pv))
## CCW - (F(1,9) = 20.81, p=0.00136)
## CW - (F(1,8) = 17.57, p=0.00303)
}
# nocursor data
obs_single_AE <- obssingle %>% filter(condition == c("nocur_1", "nocur_2")) # only nocursors
# AEmeans<- obs_single_AE %>% group_by(subject) %>% group_by(trial) %>%
#   summarise(Mean_angmaxvel = mean(angmaxvel, na.rm=TRUE), SD_angmaxvel = sd(angmaxvel, na.rm=TRUE),
#             SEM_angmaxvel = SD_angmaxvel/sqrt(length(unique(subject))))
for (rot in sort(unique(obs_single_AE$rotationval))){
nocur1<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_1") %>% filter(trial %in% c(25,26,27,28,29)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur1')
# boxplot(nocur1$pv)
# nocur1 <- nocur1[-c(2,3),] # outliers
nocur2<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_2") %>% filter(trial %in% c(0, 1, 2, 3, 4)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur2')
# boxplot(nocur2$pv)
# nocur2 <- nocur2[-c(15),] # outlying participant from training
nocurdf<- rbind(nocur1,nocur2)
nocurdf$task <- factor(nocurdf$task)
nocurdf$subject <- factor(nocurdf$subject)
ggplot(nocurdf, aes(task,pv)) +
+ geom_point()
AE_single_n <- nocur2$pv - nocur1$pv
t.test(AE_single_n, mu = 0)
# single CW t = 1.9947, df = 12, p-value = 0.0693
# single CCW t = -1.564, df = 10, p-value = 0.1489
## Compare between CW and CCW groups and collapse if possible
# t.test(abs(AE_single_n), y=abs(AE1))
# t = -0.79961, df = 21.686, p-value = 0.4326
t.test(AE_single_n, mu = 0, alternative = "greater")
)
for (rot in sort(unique(obs_single_AE$rotationval))){
nocur1<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_1") %>% filter(trial %in% c(25,26,27,28,29)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur1')
# boxplot(nocur1$pv)
# nocur1 <- nocur1[-c(2,3),] # outliers
nocur2<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_2") %>% filter(trial %in% c(0, 1, 2, 3, 4)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur2')
# boxplot(nocur2$pv)
# nocur2 <- nocur2[-c(15),] # outlying participant from training
nocurdf<- rbind(nocur1,nocur2)
nocurdf$task <- factor(nocurdf$task)
nocurdf$subject <- factor(nocurdf$subject)
ggplot(nocurdf, aes(task,pv)) +
+ geom_point()
AE_single_n <- nocur2$pv - nocur1$pv
t.test(AE_single_n, mu = 0, alternative = "greater")
# single CW t = 1.9947, df = 12, p-value = 0.0693
# single CCW t = -1.564, df = 10, p-value = 0.1489
## Compare between CW and CCW groups and collapse if possible
# t.test(abs(AE_single_n), y=abs(AE1))
# t = -0.79961, df = 21.686, p-value = 0.4326
# collapsed across rotations
# t = 5.6203, df = 23, p-value = 1.015e-05
}
source('~/Desktop/obstacle/analysis/singleDataAnalysis.R')
source('~/Desktop/obstacle/analysis/obstacleDataAnalysis.R')
source('~/Desktop/obstacle/analysis/obstacleDataAnalysis.R')
source('~/Desktop/obstacle/analysis/dualObstacleAnalysis.R')
obsdual <- read.csv('data/DualObs_Data0305_DUALONLY.csv', header = TRUE)
source('~/Desktop/obstacle/analysis/dualObstacleAnalysis.R')
View(block1)
source('~/Desktop/obstacle/analysis/dualObstacleAnalysis.R')
View(obs_dual_train)
source('~/Desktop/obstacle/analysis/dualObstacleAnalysis.R')
str(obs_dual_train)
obs_dual_train_CW <- obs_dual_train %>% filter(targetang %in% c(90, 75, 60))
View(obs_dual_train_CW)
# analyzing adaptation for each obstacle (and thus, each "free" target set)
# CW trials - leftward obstacle - analyze only 90, 75, and 60 degree targets
obs_dual_train_CW <- obs_dual_train %>% filter(rotationval == -1) %>% filter(targetang %in% c(90, 75, 60))
obs_dual_train_CW <- obs_dual_train %>% filter(rotationval == -1) %>%
filter(targetang %in% c(90, 75, 60)) %>% group_by(subject) %>% mutate(trialct = 1:n()) %>% ungroup()
108/3
36*5
obs_dual_train_CW.summary <- obs_dual_train_CW %>% group_by(trial) %>% summarise(Mean_RMSExy = mean(RMSExy, na.rm = TRUE))
View(obs_dual_train_CW.summary)
obs_dual_train_CW.summary <- obs_dual_train_CW %>%
group_by(trialct) %>%
summarise(Mean_RMSExy = mean(RMSExy, na.rm = TRUE))
View(obs_dual_train_CW.summary)
obs_dual_train_CW.summary <- obs_dual_train_CW %>%
group_by(trialct) %>%
summarise(Mean_RMSExy = mean(RMSExy, na.rm = TRUE),
SD_RMSExy = sd(RMSExy, na.rm=TRUE),
SEM_RMSExy = SD_RMSExy/sqrt(length(unique(subject))))
View(obs_dual_train_CW.summary)
gplot(data= obs_dual_train_CW.summary, aes(x=trial, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5)
ggplot(data= obs_dual_train_CW.summary, aes(x=trial, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5)
ggplot(data= obs_dual_train_CW.summary, aes(x=trialct, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5)
obs_dual_train_CCW <- obs_dual_train %>% filter(rotationval == 1) %>%
filter(targetang %in% c(120, 105, 90)) %>%
group_by(subject) %>%
mutate(trialct = 1:n()) %>%
ungroup()
View(obs_dual_train_CW.summary)
obs_dual_train_CCW.summary <- obs_dual_train_CCW %>%
group_by(trialct) %>%
summarise(Mean_RMSExy = mean(RMSExy, na.rm = TRUE),
SD_RMSExy = sd(RMSExy, na.rm=TRUE),
SEM_RMSExy = SD_RMSExy/sqrt(length(unique(subject))))
ggplot(data= obs_dual_train_CW.summary, aes(x=trialct, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
geom_line(data= obs_dual_train_CW.summary, aes(x=trialct, y=Mean_RMSExy)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5)
ggplot(data= obs_dual_train_CW.summary, aes(x=trialct, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
geom_line(data= obs_dual_train_CCW.summary, aes(x=trialct, y=Mean_RMSExy), position="jitter",color='steelblue') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5)
ggplot(data= obs_dual_train_CW.summary, aes(x=trialct, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
geom_line(data= obs_dual_train_CCW.summary, aes(x=trialct, y=Mean_RMSExy), position="jitter",color='steelblue') +
geom_ribbon(data= obs_dual_train_CCW.summary,aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy), alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5)
ggplot(data= obs_dual_train_CW.summary, aes(x=trialct, y=Mean_RMSExy)) +
geom_line(color='coral2') +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
geom_line(data= obs_dual_train_CCW.summary, aes(x=trialct, y=Mean_RMSExy), position="jitter",color='chartreuse1') +
geom_ribbon(data= obs_dual_train_CCW.summary,aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy), alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5)
ggplot(data= obs_dual_train_CW.summary, aes(x=trialct, y=Mean_RMSExy)) +
geom_line(color='coral1') +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
geom_line(data= obs_dual_train_CCW.summary, aes(x=trialct, y=Mean_RMSExy), position="jitter",color='chartreuse1') +
geom_ribbon(data= obs_dual_train_CCW.summary,aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy), alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(2, 3.5)
ggplot(data= obs_dual_train_CW.summary, aes(x=trialct, y=Mean_RMSExy)) +
geom_line(color='coral1') +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
geom_line(data= obs_dual_train_CCW.summary, aes(x=trialct, y=Mean_RMSExy), position="jitter",color='chartreuse1') +
geom_ribbon(data= obs_dual_train_CCW.summary,aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy), alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5)
ggplot(data= obs_dual_train_CW.summary, aes(x=trialct, y=Mean_RMSExy)) +
geom_line(color='salmon1') +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
geom_line(data= obs_dual_train_CCW.summary, aes(x=trialct, y=Mean_RMSExy), position="jitter",color='chartreuse1') +
geom_ribbon(data= obs_dual_train_CCW.summary,aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy), alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5)
ggplot(data=taskmeans, aes(x=trial, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5) +
ggtitle('dual obs')
obsdual$condition %>% table
View(obs_dual_train_CW.summary)
View(obs_dual_train_CCW.summary)
for (rot in sort(unique(obs_dual_train$rotationval))){
for (target in sort(unique(obs_dual_train$targetang))){
taskmeans<- obs_dual_train %>% filter(rotationval == rot | targetang == target) %>% group_by(subject) %>% group_by(trial) %>%
summarise(Mean_RMSExy = mean(RMSExy, na.rm=TRUE), SD_RMSExy = sd(RMSExy, na.rm=TRUE),
SEM_RMSExy = SD_RMSExy/sqrt(length(unique(subject))))
taskplot <- ggplot(data=taskmeans, aes(x=trial, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5) +
geom_smooth(method="lm", formula= (Mean_RMSExy ~ exp(trial)), se=FALSE, linetype = 1)
print(taskplot)
# DO ANOVA ON BLOCK 2 ACROSS TARGETS
}
}
ggplot(data=taskmeans, aes(x=trial, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5) +
ggtitle('Dual Obstacle Experiment: Training')
ggplot(data=taskmeans, aes(x=trial, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5) +
ylab("Mean Root-mean-square-error") +
xlab("Trial") +
ggtitle('Dual Obstacle Experiment: Training')
ggplot(data= obs_dual_train_CW.summary, aes(x=trialct, y=Mean_RMSExy)) +
geom_line(color='salmon1') +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
geom_line(data= obs_dual_train_CCW.summary, aes(x=trialct, y=Mean_RMSExy), position="jitter",color='chartreuse1') +
geom_ribbon(data= obs_dual_train_CCW.summary,aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy), alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5)
ggplot(data= obs_dual_train_CW.summary, aes(x=trialct, y=Mean_RMSExy)) +
geom_line(color='salmon1') +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
geom_line(data= obs_dual_train_CCW.summary, aes(x=trialct, y=Mean_RMSExy), position="jitter",color='chartreuse1') +
geom_ribbon(data= obs_dual_train_CCW.summary,aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy), alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylab("Mean Root-mean-square-error") +
xlab("Trial") +
ggtitle('Dual Obstacle Experiment: Training with Unobstructed Targets') +
ylim(0, 3.5)
obs_dual_train_CCW.summary[1,108]
obs_dual_train_CCW.summary[c(1,108),]
dualunobs <- rbind(obs_dual_train_CCW.summary[c(1,108),], obs_dual_train_CW.summary[c(1,108),])
View(dualunobs)
dualunobs$rot <- c('CCW','CCW','CW','CW')
View(dualunobs)
ggplot(data=dualunobs,aes(x=trialct, y=Mean_RMSExy) )+
geom_point(color=rot)
ggplot(data=dualunobs,aes(x=trialct, y=Mean_RMSExy) )+
geom_point(aes(color=rot)) +
geom_line(aes(color=rot))
ggplot(data=dualunobs,aes(x=trialct, y=Mean_RMSExy) )+
geom_point(aes(color=rot)) +
geom_line(aes(color=rot)) +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4)
ggplot(data=dualunobs,aes(x=trialct, y=Mean_RMSExy) )+
geom_point(aes(color=rot)) +
geom_line(aes(color=rot)) +
geom_errorbar(data=dualunobs, mapping=aes(x=trialct, ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy), width=0.2, size=1, color="blue")
ggplot(data=dualunobs,aes(x=trialct, y=Mean_RMSExy) )+
geom_point(aes(color=rot)) +
geom_line(aes(color=rot)) +
geom_errorbar(data=dualunobs, mapping=aes(x=trialct, ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy), width=0.2, size=1, color=rot)
ggplot(data=dualunobs,aes(x=trialct, y=Mean_RMSExy) )+
geom_point(aes(color=rot)) +
geom_line(aes(color=rot)) +
geom_errorbar(data=dualunobs, mapping=aes(x=trialct, ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy), width=0.2, size=1, color=rot, position="dodge")

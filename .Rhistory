obs_single_AE <- obssingle %>% filter(condition == c("nocur_1", "nocur_2")) # only nocursors
# AEmeans<- obs_single_AE %>% group_by(subject) %>% group_by(trial) %>%
#   summarise(Mean_angmaxvel = mean(angmaxvel, na.rm=TRUE), SD_angmaxvel = sd(angmaxvel, na.rm=TRUE),
#             SEM_angmaxvel = SD_angmaxvel/sqrt(length(unique(subject))))
for (rot in sort(unique(obs_single_AE$rotationval))){
nocur1<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_1") %>% filter(trial %in% c(25,26,27,28,29)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur1')
# boxplot(nocur1$pv)
# nocur1 <- nocur1[-c(2,3),] # outliers
nocur2<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_2") %>% filter(trial %in% c(0, 1, 2, 3, 4)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur2')
# boxplot(nocur2$pv)
# nocur2 <- nocur2[-c(15),] # outlying participant from training
nocurdf<- rbind(nocur1,nocur2)
nocurdf$task <- factor(nocurdf$task)
nocurdf$subject <- factor(nocurdf$subject)
ggplot(nocurdf, aes(task,pv)) +
+ geom_point()
AE_single_n <- nocur2$pv - nocur1$pv
t.test(AE_single_n, mu = 0)
}
obssingle <- read.csv('DualObs_Data0305_SINGLESONLY.csv', header = TRUE)
obssingle <- tbl_df(obssingle) # make to tibble
rot <- 1
nocur1<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_1") %>% filter(trial %in% c(25,26,27,28,29)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur1')
# boxplot(nocur1$pv)
# nocur1 <- nocur1[-c(2,3),] # outliers
nocur2<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_2") %>% filter(trial %in% c(0, 1, 2, 3, 4)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur2')
# boxplot(nocur2$pv)
# nocur2 <- nocur2[-c(15),] # outlying participant from training
nocurdf<- rbind(nocur1,nocur2)
nocurdf$task <- factor(nocurdf$task)
nocurdf$subject <- factor(nocurdf$subject)
ggplot(nocurdf, aes(task,pv)) +
+ geom_point()
AE_single_n <- nocur2$pv - nocur1$pv
t.test(AE_single_n, mu = 0)
obs_single_AE <- obssingle %>% filter(condition == c("nocur_1", "nocur_2"))
library(dplyr)
library(ggplot2)
nocur1<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_1") %>% filter(trial %in% c(25,26,27,28,29)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur1')
# boxplot(nocur1$pv)
# nocur1 <- nocur1[-c(2,3),] # outliers
nocur2<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_2") %>% filter(trial %in% c(0, 1, 2, 3, 4)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur2')
# boxplot(nocur2$pv)
# nocur2 <- nocur2[-c(15),] # outlying participant from training
nocurdf<- rbind(nocur1,nocur2)
nocurdf$task <- factor(nocurdf$task)
nocurdf$subject <- factor(nocurdf$subject)
ggplot(nocurdf, aes(task,pv)) +
+ geom_point()
AE_single_n <- nocur2$pv - nocur1$pv
t.test(AE_single_n, mu = 0)
obs_single_AE <- obssingle %>% filter(condition == c("nocur_1", "nocur_2"))
obssingle <- read.csv('DualObs_Data0305_SINGLESONLY.csv', header = TRUE)
obssingle <- tbl_df(obssingle)
setwd('data')
setwd('')
setwd
setwd()
setwd('/Users/mayala/Desktop/obstacle/analysis')
setwd('/Users/mayala/Desktop/obstacle/data')
obssingle <- read.csv('DualObs_Data0305_SINGLESONLY.csv', header = TRUE)
obssingle <- tbl_df(obssingle) # make to tibble
unique((obssingle))
nocur1<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_1") %>% filter(trial %in% c(25,26,27,28,29)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur1')
# boxplot(nocur1$pv)
# nocur1 <- nocur1[-c(2,3),] # outliers
nocur2<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_2") %>% filter(trial %in% c(0, 1, 2, 3, 4)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur2')
# boxplot(nocur2$pv)
# nocur2 <- nocur2[-c(15),] # outlying participant from training
nocurdf<- rbind(nocur1,nocur2)
nocurdf$task <- factor(nocurdf$task)
nocurdf$subject <- factor(nocurdf$subject)
ggplot(nocurdf, aes(task,pv)) +
+ geom_point()
AE_single_n <- nocur2$pv - nocur1$pv
t.test(AE_single_n, mu = 0)
# single CW t = 1.9947, df = 12, p-value = 0.0693
obs_single_AE <- obssingle %>% filter(condition == c("nocur_1", "nocur_2"))
nocur1<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_1") %>% filter(trial %in% c(25,26,27,28,29)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur1')
# boxplot(nocur1$pv)
# nocur1 <- nocur1[-c(2,3),] # outliers
nocur2<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_2") %>% filter(trial %in% c(0, 1, 2, 3, 4)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur2')
# boxplot(nocur2$pv)
# nocur2 <- nocur2[-c(15),] # outlying participant from training
nocurdf<- rbind(nocur1,nocur2)
nocurdf$task <- factor(nocurdf$task)
nocurdf$subject <- factor(nocurdf$subject)
ggplot(nocurdf, aes(task,pv)) +
+ geom_point()
AE_single_n <- nocur2$pv - nocur1$pv
boxplot(AE_single_n)
head(obs_single_AE)
AE1 <- AE_signl
AE1 <- AE_single_n
rot <- 2
nocur1<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_1") %>% filter(trial %in% c(25,26,27,28,29)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur1')
# boxplot(nocur1$pv)
# nocur1 <- nocur1[-c(2,3),] # outliers
nocur2<- obs_single_AE %>% filter(rotgroup == rot) %>% filter(condition == "nocur_2") %>% filter(trial %in% c(0, 1, 2, 3, 4)) %>%
group_by(subject) %>% summarise(pv = mean(angmaxvel, na.rm=TRUE), block = ceiling(mean(block5))) %>% mutate(task = 'nocur2')
# boxplot(nocur2$pv)
# nocur2 <- nocur2[-c(15),] # outlying participant from training
nocurdf<- rbind(nocur1,nocur2)
nocurdf$task <- factor(nocurdf$task)
nocurdf$subject <- factor(nocurdf$subject)
ggplot(nocurdf, aes(task,pv)) +
+ geom_point()
AE_single_n <- nocur2$pv - nocur1$pv
t.test(AE_single_n, mu = 0)
AE <- rbind(AE1, AE_single_n)
AE
View(AE)
AE <- c(AE1, AE_single_n)
AE <- abs(AE)
t.test(AE, mu=0)
?t.test
t.test(AE_single_n, y=AE1)
t.test(abs(AE_single_n), y=abs(AE1))
obsdual <- read.csv('DualObs_Data0305_DUALONLY.csv', header = TRUE)
obsdual <- tbl_df(obsdual)
obs_dual_train <- obsdual %>% filter(condition == 'train_dual') # looking only at trainin
head(obs_dual_train)
sort(unique(obs_dual_train$targetang))
rot <- 1
target <- 120
taskmeans<- obs_dual_train %>% filter(rotationval == rot | targetang == target) %>% group_by(subject) %>% group_by(trial) %>%
summarise(Mean_RMSExy = mean(RMSExy, na.rm=TRUE), SD_RMSExy = sd(RMSExy, na.rm=TRUE),
SEM_RMSExy = SD_RMSExy/sqrt(length(unique(subject))))
View(taskmeans)
taskmeans<- obs_dual_train %>% filter(rotationval == 2 | targetang == 120) %>% group_by(subject) %>% group_by(trial) %>%
summarise(Mean_RMSExy = mean(RMSExy, na.rm=TRUE), SD_RMSExy = sd(RMSExy, na.rm=TRUE),
SEM_RMSExy = SD_RMSExy/sqrt(length(unique(subject))))
taskplot <- ggplot(data=taskmeans, aes(x=trial, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5) +
ggtitle(dfname)
print(taskplot)
taskplot <- ggplot(data=taskmeans, aes(x=trial, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5)
print(taskplot)
taskplot <- ggplot(data=taskmeans, aes(x=trial, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5) +
geom_smooth(method="lm", aes(color="Exp Model"), formula= (Mean_RMSExy ~ exp(trial)), se=FALSE, linetype = 1)
print(taskplot)
taskmeans<- obs_dual_train %>% filter(rotationval == rot | targetang == target) %>% group_by(subject) %>% group_by(trial) %>%
summarise(Mean_RMSExy = mean(RMSExy, na.rm=TRUE), SD_RMSExy = sd(RMSExy, na.rm=TRUE),
SEM_RMSExy = SD_RMSExy/sqrt(length(unique(subject))))
taskplot <- ggplot(data=taskmeans, aes(x=trial, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5) +
geom_smooth(method="lm", formula= (Mean_RMSExy ~ exp(trial)), se=FALSE, linetype = 1)
print(taskplot)
taskmeans<- obs_dual_train %>% filter(rotationval == rot | targetang == target) %>% group_by(subject) %>% group_by(trial) %>%
summarise(Mean_RMSExy = mean(RMSExy, na.rm=TRUE), SD_RMSExy = sd(RMSExy, na.rm=TRUE),
SEM_RMSExy = SD_RMSExy/sqrt(length(unique(subject))))
taskplot <- ggplot(data=taskmeans, aes(x=trial, y=Mean_RMSExy)) +
geom_line() +
geom_ribbon(aes(ymin=Mean_RMSExy-SEM_RMSExy, ymax=Mean_RMSExy+SEM_RMSExy),
alpha=0.4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ylim(0, 3.5) +
geom_smooth(method="lm", formula= (Mean_RMSExy ~ exp(trial)), se=FALSE, linetype = 1)
print(taskplot)
setwd('/Users/mayala/Desktop/housing')
train <- read.csv('train.csv', header = TRUE)
library(ggplot2)
library(dplyr)
library(car)
train<- tbl_df(train)
head(train)
View(train)
mod1<-lm(SalePrice ~ LotArea, data=train)
summary(mod1)
